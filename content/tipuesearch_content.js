var tipuesearch = {"pages": [{'title': '各組期末報告說明', 'text': '各組員必須在 W17 上課之前完成期末報告簡報影片上傳與連結, 並放入本網站之"專案口頭簡報"頁面. \n 各組必須在 W17 上課之前完成分組期末報告 pdf 檔案, 上傳至各分組的倉儲中, 並將連結提供至本網站之"專案報告書"頁面. \n 期末報告期間每週對各成員之評分依據下列要項: \n \n 各組員在各分組網站中所呈現之任務執行內容, 並拍攝操作影音 mp4, 將影片標題署名"國立虎尾科技大學-機械設計工程系-協同產品設計實習 A - 學號及影片主題" 後上傳, 並將影片嵌入本網站各章節頁面中. \n 每組將提供組長本網站倉儲協同管理權, 專門處理各組員在各分支或 master 分支中的 pull requests, 各組員必須透過以 ag1, ag2 .... 命名之分支對本倉儲改版, 確定內容無誤後, 再設法由組長處理各 pull requests 之內容合併, Github Pages 將設為與 master 分支對應, 各組員之評分將依據各 pull requests 中所列出之學號與內容判定. \n 請各組員勿將影片檔、圖片檔案或各式檔案送至本倉儲, 影片檔案請上傳至 Youtube, 圖片檔案請送至各組倉儲網站, 各式檔案則請送至各組員 Google Drive 區, 並以嵌入 (iframe), 將影片放入本網站, 其餘圖片或檔案則透過 img 或 a 標註放入各相關頁面. \n \n 2a 分組倉儲 \n https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g1 \xa0( 2ag1 ) https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g2 \xa0( 2ag2 ) https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g3_1 \xa0( 2ag3 ) https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g4 \xa0( 2ag4 ) https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g5 \xa0( 2ag5 ) https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g6 \xa0( 2ag6 ) \n', 'tags': '', 'url': '各組期末報告說明.html'}, {'title': '執行規劃', 'text': '', 'tags': '', 'url': '執行規劃.html'}, {'title': 'Scrum-2 執行規劃', 'text': 'Scrum-2 是一人一組的測試用帳號, 其執行規劃為按照週次分別完成各項任務: \n 12 週 - 完成各組員應完成任務分配 \n 13 週 - 在 scrum-2 分支回報各任務成果, 將所有 onshape 零組件連結與圖片放入網站 \n 14 週 - 將所有影片上傳至 Youtube, 內容送回組分支, 準備與 master 分支合併 \n 15 週 - 確認各學員已經完成所有內容與 html 及 pdf 專案報告製作. \n 16 週 - 完成各學員的期末簡報影片上傳與嵌入, 完成分組專案報告 pdf 檔案上傳與連結 \n 17 週 - 在課堂上進行分組簡報 \n', 'tags': '', 'url': 'Scrum-2 執行規劃.html'}, {'title': '手足球系統模擬', 'text': 'AG1 \n 專案成果摘要 \n 專案執行動機 \n 相關文獻探討 \n 專案執行成員 \n 執行使用套件 \n 專案執行過程規劃 \n 專案執行內容 \n 專案結論 \n \n AG2 \n 專案成果摘要 \n 專案執行動機 \n 相關文獻探討 \n 專案執行成員 \n 執行使用套件 \n 專案執行過程規劃 \n 專案執行內容 \n 專案結論 \n \n AG3 \n 專案成果摘要 \n 專案執行動機 \n 相關文獻探討 \n 專案執行成員 \n 執行使用套件 \n 專案執行過程規劃 \n 專案執行內容 \n 專案結論 \n \n AG4 \n 專案成果摘要 \n 專案執行動機 \n 相關文獻探討 \n 專案執行成員 \n 執行使用套件 \n 專案執行過程規劃 \n 專案執行內容 \n 專案結論 \n \n AG5 \n 專案成果摘要 \n 專案執行動機 \n 相關文獻探討 \n 專案執行成員 \n 執行使用套件 \n 專案執行過程規劃 \n 專案執行內容 \n 專案結論 \n \n AG6 \n 專案成果摘要 \n 專案執行動機 \n 相關文獻探討 \n 專案執行成員 \n 執行使用套件 \n 專案執行過程規劃 \n 專案執行內容 \n 專案結論 \n', 'tags': '', 'url': '手足球系統模擬.html'}, {'title': '設計與繪圖', 'text': '', 'tags': '', 'url': '設計與繪圖.html'}, {'title': '零組件尺寸分析', 'text': 'AG1 \n 手足球系統的零組件尺寸分析 (可行性分析) \n 球場分析 \n 球場尺寸依照網頁上的進行設計 \n \n 而球場高度的部分，以模擬時方便看到球移動為優先考量，取適當高度即可 \n \n 球員分析 \n 同樣依照網站上所給隻尺寸進行繪製的動作 \n \n 但由於模擬時，發現球員尺寸會造成兩根桿子平行，球員互相撞擊的部分，因此做了外型上的更改 \n \n 桿子分析 \n 桿子我們設定的長度為80in，由於模擬時可能會發生桿子太短，而晃動的情況發生，所以設計長一點來防止這種情況 \n \n 軌道分析 \n 球進球門後，我們製作一個斜坡讓球能夠停一個角落，等待送球機構把球送到另一個軌道；我們是利用斜坡與重力來運送球。 \n \n \n 在這個轉角處的時候，有時候球會卡住，所以在角落處設計一個擋板，這樣能夠確保球不會卡住在這個角落，利用重力能夠繼續滾動。 \n \n \n 這個孔是將球送回球場，出球孔提高是因為怕球會滾回去而提高的，不會這個孔而影響球的滾動路徑。 \n \n 場地變更設計 \n 進行模擬程式時，發現到當球滾到場地角落時，足球員將無法再次擊球，因此參考現實中，足球比賽中所謂的角球的概念將場地邊更成四個角落皆為斜坡，如下圖 \n \n 圖檔: football \n 影片: \n \n 成品分析 \n 目前依照前面所設計的圖形，將所有零件組裝完成 \n \n \n AG2 \n 手足球系統的零組件尺寸分析 (可行性分析) \n \n AG3 \n 手足球系統的零組件尺寸分析 (可行性分析) \n 1.球桌: \n A.球桌內部角落的部分，之前模擬的時候，會有卡球的問題，看了網路上的影片，打到角落時也會有要用手撿球的問題，所以將角落做了一點翹高大概2mm。 \n B.手柄距離也在做微調，太近的話，手沒有辦法握住求柄，即使能夠握住，靠得太近也會影響使用者的感受，反之，太寬使用者也不好操作，尺寸設計在雙手在腰間的寬度還要小比較合適。 \n C.球門及場地的大小，參考網路上標準場地的尺寸來做設計。球桌高度大概是在腰間的，但是每個人的身高不同，我們評估下來腰間上下150mm，使用者的感受都是可以接受的。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 2.桿子: \n 本來想說用1000mm移動距離會剛好，但是加上手柄之後，視覺上有一點太窄了，所以把長度加了200mm，讓桿子的2編對稱個增長100mm。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 3.球員: \n 本來設定70會有一點卡到地板，轉動時也會有球員互相卡到的問題，所以又把尺寸稍微修小一點，改善這樣的狀況。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 4.手柄: \n 握柄太短會讓使用者握不滿手柄，造成不好使用的情況，起初設定100，但後來考量到有些人手掌會比較大的問題，所以多加了25mm。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 5.組裝時，尺寸限制: \n 5個足球員的時候，因為當初沒有把篩子的大小考慮進去，所以把人偶之間的距離設成200，後來發現這樣距離會太大人偶移動的距離變得很少，後來改成107。 \n ↓以下為初步尺寸限制的草圖 \n \n ↓以下為最終尺寸限制的草圖 \n \n 40623105 \n \n 40623109 \n \n 40623118 \n \n \n \n AG4 \n 手足球系統的零組件尺寸分析 (可行性分析) \n \n AG5 \n 手足球系統的零組件尺寸分析 (可行性分析) \n \n \n AG6 \n 手足球系統的零組件尺寸分析 (可行性分析) \n', 'tags': '', 'url': '零組件尺寸分析.html'}, {'title': '參數設計與繪圖', 'text': 'AG1 \n 手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n 球檯 \n \n 球門與軌道 \n \n \n \n \n 球員 \n \n 桿子 \n \n 送球機構 \n \n 組合 \n \n \n AG2 \n 手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n \n AG3 \n 手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n \n AG4 \n 手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n \n AG5 \n 手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n \n AG6 \n 手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n', 'tags': '', 'url': '參數設計與繪圖.html'}, {'title': '細部設計與 BOM', 'text': 'AG1 \n 爆炸圖 \n \n 工程圖 \n \n \n \n \n 組合圖 \n \n BOM表 \n \n \n AG2 \n 手足球零件格式說明 \n 手足球零件格式說明 \n 零件 BOM \n 手足球零組件材料表 (含零組件下載連結) \n 零件尺寸圖 \n 零件尺寸圖 \n 零件部分組裝圖 \n 零件部分組裝圖 \n 3D 零組件爆炸圖 \n 3D 零組件爆炸圖 \n \n AG3 \n 手足球零件格式說明 \n 手足球零件格式說明 \n 零件 BOM \n 手足球零組件材料表 (含零組件下載連結) \n 零件尺寸圖 \n 零件尺寸圖 \n 零件部分組裝圖 \n 零件部分組裝圖 \n 3D 零組件爆炸圖 \n 3D 零組件爆炸圖 \n \n AG4 \n 手足球零件格式說明 \n 手足球零件格式說明 \n 零件 BOM \n 手足球零組件材料表 (含零組件下載連結) \n 零件尺寸圖 \n 零件尺寸圖 \n 零件部分組裝圖 \n 零件部分組裝圖 \n 3D 零組件爆炸圖 \n 3D 零組件爆炸圖 \n \n AG5 \n 1.球桌: \n A.球桌內部角落的部分，之前模擬的時候，會有卡球的問題，看了網路上的影片，打到角落時也會有要用手撿球的問題，所以將角落做了一點翹高大概2mm。 \n B.手柄距離也在做微調，太近的話，手沒有辦法握住求柄，即使能夠握住，靠得太近也會影響使用者的感受，反之，太寬使用者也不好操作，尺寸設計在雙手在腰間的寬度還要小比較合適。 \n C.球門及場地的大小，參考網路上標準場地的尺寸來做設計。球桌高度大概是在腰間的，但是每個人的身高不同，我們評估下來腰間上下150mm，使用者的感受都是可以接受的。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 2.桿子: \n 本來想說用1000mm移動距離會剛好，但是加上手柄之後，視覺上有一點太窄了，所以把長度加了200mm，讓桿子的2編對稱個增長100mm。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 3.球員: \n 本來設定70會有一點卡到地板，轉動時也會有球員互相卡到的問題，所以又把尺寸稍微修小一點，改善這樣的狀況。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 4.手柄: \n 握柄太短會讓使用者握不滿手柄，造成不好使用的情況，起初設定100，但後來考量到有些人手掌會比較大的問題，所以多加了25mm。 \n ↓下圖為設計球桌時所繪製的草圖 \n \n 5.組裝時，尺寸限制: \n 5個足球員的時候，因為當初沒有把篩子的大小考慮進去，所以把人偶之間的距離設成200，後來發現這樣距離會太大人偶移動的距離變得很少，後來改成107。 \n ↓以下為初步尺寸限制的草圖 \n \n ↓以下為最終尺寸限制的草圖 \n \n \n AG6 \n 手足球零件格式說明 \n 手足球零件格式說明 \n 零件 BOM \n 手足球零組件材料表 (含零組件下載連結) \n 零件尺寸圖 \n 零件尺寸圖 \n 零件部分組裝圖 \n 零件部分組裝圖 \n 3D 零組件爆炸圖 \n 3D 零組件爆炸圖 \n \n', 'tags': '', 'url': '細部設計與 BOM.html'}, {'title': 'V-rep 動態模擬', 'text': '\n', 'tags': '', 'url': 'V-rep 動態模擬.html'}, {'title': '送球機構設計與模擬', 'text': "AG1 \n Week 11-12 \n 如何將球從球門到中場，經過討論後，想說在進門後直接將球丟回中場去，但這種做法會增加寫程式的困擾，後來就想說改成直接帶回中場，以爪子的方式，將球從球門那裡運送到中場，所以就畫了一組爪子的機構，但最後放置在球門旁時，因為長度不夠，若要再改長度的話，此機構可能就無法運行，再加上運送的過程中，無法保證球不會掉，或是未能想到說要多加東西讓球從爪子上回到球場，所以就放棄了此機構。 \n 之後我們分成兩小組去構想送球機構 \n 丟球爪子 \n \n \n Week 12-13 \n 經過第一次的送球機構思考後，我們決定讓進球門的球運送至高處，再以軌道高低差的方式，讓球自然滾入場內，因時間的關係，分成兩小組一起繪製，再決定最終版。 \n 方法一 \n 以上學期的鋼球運動系統為出發點，想畫出一個類似摩天輪的東西，就是 以圓盤旋轉的方式，將球從低處運送到高處。 \n 送球機構(圓盤) \n \n \n 球檯與軌道(圓盤) \n \n \n 送球機構(圓盤)模擬-1 \n 模擬的時候，球會滾入圓盤的洞裡，但還沒轉上去，就會掉出來。 \n \n 送球機構(圓盤)模擬-2 \n \n 方法二 \n 後來想到可以以摩天輪的想法與丟球爪子合體，所以在設計時，加入了爪子的形式。畫完此一小機構後，運作起來的感覺還不錯，所以就決定用它，但還必須加上軌道，而軌道在畫製時，必須思考如何傾斜才能使球順利地滾入場地，還有在拿球與放球時的軌道設計須配合運轉機構的爪子。 \n 送球機構(爪子) \n \n 一開始畫完的軌道，加上上一個小機構一起放入Vrep模擬時，會卡在一個地方就是將球送上去後，滑落到轉角就會卡住，於是我們就在轉角加一塊三角形擋板，讓球會因三角形的斜面而往下走。 \n 球檯與軌道(爪子) \n \n \n 初步模擬的送球機構 \n \n 總結: \n 因為方法一圓盤送球機構的還是有一點點小問題，而方法二的整體看起來，已經可以順利運作，所以最後以方法二為最終版本。 \n Week 14-15 \n 手足球球檯與送球機構設計完之後進行模擬，尋找哪裡零組件有干涉的問題；或者軌道傳送球時，球在哪裡會卡住，並返回onshape重新更改尺寸，再匯入至V-rep再次進行模擬。 \n \n 問題與解決 \n 問題 \n Q1. 球與軌道發生干涉 \n Q2. 球機率性卡在軌道轉角 \n \n 解決 \n A1. 調整軌道與桿子的高度，並修改球員的高度，確保能夠踢到球 \n A2. 在轉角處新增一個軌道，能夠讓球順著軌道行走 \n \n \n AG2 \n \n \n AG3 \n Ag3-每周進度 \n W11進度 \n 本周進行人員分配工作，由 張育偉、洪明棋、林聖翰等三人所負責，在初步的討論下已有了各自的課題，由明棋負責送球軌道和球門下集球通道的設計及繪製，聖翰負責將球翻轉送上球檯的翻轉平台，而育偉則是Onshape的組裝以及V-rep的模擬，暫定將於三周內完成並將由其他成員完成程式的部分。 \n W12進度 \n 本周的進度是把送球機構的雛型加強，明棋將球門的斜度與寬度還有出球口重新做調整，聖翰將翻轉平台配合軌道重新調整了尺寸以及修正槽內的平台角度，育偉配合兩道球門的出球口與兩個反轉平台進球口架設兩條軌道。 \n W13進度 \n 本周進行由三人所繪製之零組件以及足球桌的組裝，組立上可以發現各組件上存在著許多配合上的誤差，從這裡可以看出組員之間的溝通並沒有妥善的說明清楚，這亦是協同設計上不可忽視的一點，其中軌道的部分修改最為多次，主要是因為與其連接的零組件定位方面須考慮非常多。 \n Ag3-討論 \n w11討論 \n 首先的問題是如何將球送上場地，一開始是以場地上方、下方以及兩側的位子出發去找出那個位置所對應的其合適的方法，場地上方是一開始就不去考慮的，在上方的話軌道會影響遊玩者的視線，而顯得有些礙眼；場地側面則是把手將其裝設的空間給佔據，受空間受限而改用其他位置來考慮，因此重點部分決定由下方來著手，下方有的問題該屬如何將場地諞面填平，想的方法千奇百怪甚至有點天馬行空，最終定案為由場地下方送球，在中心處挖洞設置一個翻轉的撥球平台。 \n w12討論 \n 本周的問題'將所有設計出來的機構調整尺寸到最佳化，球門方面調整了斜面以及送球口的尺寸，以便後續球在模擬時不會卡住，軌道將雛型設計出來並搭配球門與撥球平台。為了方便製造，原本兩個球門進球後會從撥球平台不同側經由軌道送入裡面，經過討論我們最後重新設計讓球都經由同一側進入撥球平台的槽中。 \n Ag3-足球台模擬進度 \n w11 \n 這週的進度是分配工作，v-rep 模擬的部分是由陳微云40623105，李如芳40623109，楊秉澤40623118來負責，張華倞40623128（組長）則是幫助我們有困難的地方，幫助我們解決問題。總共分成兩個部分，第一部分是簡化，第二部分是處理樹狀圖加模擬。一開始因為還要設計及畫圖，所以這週整組先一起設計球桌大小及各個零件的大小，並上網查資料再一起討論。 \n ●若要查看設計尺寸，請看設計與繪圖→零件與尺寸分析 (1.2.3.4) \n https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g3_1/content/%E9%9B%B6%E7%B5%84%E4%BB%B6%E5%B0%BA%E5%AF%B8%E5%88%86%E6%9E%90.html \n w12 \n 這週的進度是先用之前的圖檔熟悉簡化的操作，並處理樹狀圖，嘗試模擬。 \n 將樹狀圖處理好成可以轉動的狀態，但只能轉動不能左右移動，還再進行修改。 \n 將軸裝在手柄上，嘗試看看能不能用手柄驅動桿子，進而驅動球員。 \n 將人偶簡化，嘗試能不能將桿子和人偶合併再一起簡化。 \n 40623105 \n \n \n 40623109 \n \n 40623118 \n \n \n w13 \n 這週因為繪圖組的還需要時間畫圖，所以仍然用舊的圖檔進行簡化跟模擬。 \n 將球桌簡化，把球門的部分分開來建模，否則形狀會很奇怪，插入桿子的部分，因為洞口的關係，簡化會變得比較複雜，要經過建模變成一體的比較好操作。 \n 處理樹狀圖，插入軸後，要讓手柄，桿子，及人偶一起連動，並能左右移動。但是出現了會一起掉落的問題，仍在處理中。 \n 40623105 \n \n 40623109 \n \n 40623118 \n \n w14 \n 因為繪圖組的出現限制錯誤的問題，所以這週過去支援繪圖組裝的部分。 \n 詢問繪圖組後，發現他們對於組合圖的組裝尚未完成，並不熟悉限制條件與方式，也示範一次如何組裝並錄製影片，由於需反覆的調整與限制方式，所以我們這周與他們討論並一起解決問題。 \n ●若要查看尺寸設計的部分，請看設計與繪圖→零件與尺寸分析(5) \n https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g3_1/content/%E9%9B%B6%E7%B5%84%E4%BB%B6%E5%B0%BA%E5%AF%B8%E5%88%86%E6%9E%90.html \n 5/22(三) \n 繪圖組圖檔已完成，所以正式對最終圖檔進行簡化。 \n 篩子及桿子簡化成圓柱，球員則是建樺呈方形即可。 \n 40623118 \n \n 5/23(四) \n 球桌簡化的部分，每一塊板子都要分別建模。 \n 球門的部分要分開來建模，如果整塊板子一起用的話，球門會封住。 \n 40623118 \n \n 5/25(六) \n 本來以為簡化完要跟原來的外型一樣才算成功，所以把每一個不同的面，都分開來建模，但是篩子只需要簡化成圓柱狀即可。 \n 40623109 \n \n \n \n \n w15 \n 手把不需特別簡化，將其餘的模型簡化，並貼在本體上，完成。 \n 40623105 \n \n 40623109 \n \n \n AG4 \n \n \n AG5 \n \n \n AG6 \n \n", 'tags': '', 'url': '送球機構設計與模擬.html'}, {'title': '系統功能展示', 'text': 'AG1 \n w12 手足球雙人對打測試影片 \n \n 圖檔: football \n 程式碼 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n \n \n \n import vrep \n import keyboard \n import time \n import sys, math\xa0\xa0\xa0\xa0  \n # child threaded script:  \n # 內建使用 port 19997 若要加入其他 port, 在\xa0 serve 端程式納入 \n #simExtRemoteApiStart(19999) \n \xa0\xa0 \xa0 \n vrep.simxFinish(-1) \n \xa0 \n \xa0 \n clientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5) \n KickBallV = 360 \n R_KickBallVel = (math.pi/180)*KickBallV \n B_KickBallVel = -(math.pi/180)*KickBallV \n if clientID!= -1: \n \xa0\xa0\xa0\xa0 print("Connected to remote server") \n else: \n \xa0\xa0\xa0\xa0 print(\'Connection not successful\') \n \xa0\xa0\xa0\xa0 sys.exit(\'Could not connect\') \n \xa0\xa0\xa0\xa0 \xa0 \n errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,\'Sphere\',vrep.simx_opmode_oneshot_wait) \n errorCode,P1_handle=vrep.simxGetObjectHandle(clientID,\'P1\',vrep.simx_opmode_oneshot_wait) \n errorCode,P2_handle=vrep.simxGetObjectHandle(clientID,\'P2\',vrep.simx_opmode_oneshot_wait) \n errorCode,R1_handle=vrep.simxGetObjectHandle(clientID,\'R1\',vrep.simx_opmode_oneshot_wait) \n errorCode,R2_handle=vrep.simxGetObjectHandle(clientID,\'R2\',vrep.simx_opmode_oneshot_wait) \n \xa0 \n \xa0 \n vrep.simxSetJointTargetVelocity(clientID,P1_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,P2_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,R1_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,R2_handle,0,vrep.simx_opmode_oneshot_wait) \n \xa0 \n def speed(handle,speed): \n \xa0\xa0\xa0\xa0 errorCode = vrep.simxSetJointTargetVelocity(clientID,handle,speed,vrep.simx_opmode_oneshot_wait) \n \xa0 \n vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait) \n while True: \n \xa0\xa0\xa0\xa0 try: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if keyboard.is_pressed(\'s\'):  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R1_handle,R_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif keyboard.is_pressed(\'w\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R1_handle,B_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R1_handle,0) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if keyboard.is_pressed(\'a\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P1_handle,0.1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif keyboard.is_pressed(\'d\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P1_handle,-0.1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P1_handle,0) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if keyboard.is_pressed(\'8\'):  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle,R_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif keyboard.is_pressed(\'5\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle,B_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle,0) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if keyboard.is_pressed(\'6\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P2_handle,0.1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif keyboard.is_pressed(\'4\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P2_handle,-0.1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P2_handle,0) \n \xa0\xa0\xa0\xa0 except: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 break \n #vrep.simxSetJointTargetVelocity(clientID,R1_handle,0,vrep.simx_opmode_oneshot_wait) \n \n \n \n \n \n \n \n \n w13手足球人對電腦自動回擊測試影片 \n \n 圖檔: football \n 程式碼 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n 67 \n 68 \n 69 \n \n \n \n import vrep \n import keyboard \n import time \n import sys, math\xa0\xa0\xa0\xa0  \n # child threaded script:  \n # 內建使用 port 19997 若要加入其他 port, 在\xa0 serve 端程式納入 \n #simExtRemoteApiStart(19999) \n \xa0\xa0 \xa0 \n vrep.simxFinish(-1) \n \xa0 \n \xa0 \n clientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5) \n KickBallV = 360 \n R_KickBallVel = (math.pi/180)*KickBallV \n B_KickBallVel = -(math.pi/180)*KickBallV \n if clientID!= -1: \n \xa0\xa0\xa0\xa0 print("Connected to remote server") \n else: \n \xa0\xa0\xa0\xa0 print(\'Connection not successful\') \n \xa0\xa0\xa0\xa0 sys.exit(\'Could not connect\') \n \xa0\xa0\xa0\xa0 \xa0 \n errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,\'Sphere\',vrep.simx_opmode_oneshot_wait) \n errorCode,P1_handle=vrep.simxGetObjectHandle(clientID,\'P1\',vrep.simx_opmode_oneshot_wait) \n errorCode,P2_handle=vrep.simxGetObjectHandle(clientID,\'P2\',vrep.simx_opmode_oneshot_wait) \n errorCode,R1_handle=vrep.simxGetObjectHandle(clientID,\'R1\',vrep.simx_opmode_oneshot_wait) \n errorCode,R2_handle=vrep.simxGetObjectHandle(clientID,\'R2\',vrep.simx_opmode_oneshot_wait) \n errorCode,B1_handle=vrep.simxGetObjectHandle(clientID,\'B1\',vrep.simx_opmode_oneshot_wait) \n \xa0 \n \xa0 \n vrep.simxSetJointTargetVelocity(clientID,P1_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,P2_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,R1_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,R2_handle,0,vrep.simx_opmode_oneshot_wait) \n \xa0 \n def speed(handle,speed): \n \xa0\xa0\xa0\xa0 errorCode = vrep.simxSetJointTargetVelocity(clientID,handle,speed,vrep.simx_opmode_oneshot_wait) \n def start(): \n \xa0\xa0\xa0\xa0 errorCode =vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait) \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 while True: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 errorCode,position_BR=vrep.simxGetObjectPosition(clientID,R1_handle,-1,vrep.simx_opmode_oneshot) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 BB =position_S[1] - position_BR[1] #左右 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 BBB =position_S[0] - position_BR[0]#前後 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print(position_S) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if BBB >0.02: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R1_handle,B_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif BBB <= 0.02: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R1_handle,R_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pass \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 try: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if keyboard.is_pressed(\'8\'):  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle,R_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif keyboard.is_pressed(\'5\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle,B_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle,0) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if keyboard.is_pressed(\'4\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P2_handle,0.1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif keyboard.is_pressed(\'6\'):\xa0  \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P2_handle,-0.1) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(P2_handle,0) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 except: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 break \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Mv = BB*1.5 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,P1_handle,Mv,vrep.simx_opmode_oneshot_wait) \n start() \n \n \n \n \n \n \n \n w14手足球電腦對打測試影片 \n \n 圖檔: football \n 程式碼 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n \n \n \n import vrep \n import keyboard \n import time \n import sys, math\xa0\xa0\xa0\xa0  \n # child threaded script:  \n # 內建使用 port 19997 若要加入其他 port, 在\xa0 serve 端程式納入 \n #simExtRemoteApiStart(19999) \n \xa0\xa0 \xa0 \n vrep.simxFinish(-1) \n \xa0 \n \xa0 \n clientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5) \n KickBallV = 360 \n R_KickBallVel = (math.pi/180)*KickBallV \n B_KickBallVel = -(math.pi/180)*KickBallV \n if clientID!= -1: \n \xa0\xa0\xa0\xa0 print("Connected to remote server") \n else: \n \xa0\xa0\xa0\xa0 print(\'Connection not successful\') \n \xa0\xa0\xa0\xa0 sys.exit(\'Could not connect\') \n \xa0\xa0\xa0\xa0 \xa0 \n errorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,\'Sphere\',vrep.simx_opmode_oneshot_wait) \n errorCode,P1_handle=vrep.simxGetObjectHandle(clientID,\'P1\',vrep.simx_opmode_oneshot_wait) \n errorCode,P2_handle=vrep.simxGetObjectHandle(clientID,\'P2\',vrep.simx_opmode_oneshot_wait) \n errorCode,R1_handle=vrep.simxGetObjectHandle(clientID,\'R1\',vrep.simx_opmode_oneshot_wait) \n errorCode,R2_handle=vrep.simxGetObjectHandle(clientID,\'R2\',vrep.simx_opmode_oneshot_wait) \n errorCode,B1_handle=vrep.simxGetObjectHandle(clientID,\'B1\',vrep.simx_opmode_oneshot_wait) \n errorCode,B2_handle=vrep.simxGetObjectHandle(clientID,\'B2\',vrep.simx_opmode_oneshot_wait) \n \xa0 \n \xa0 \n vrep.simxSetJointTargetVelocity(clientID,P1_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,P2_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,R1_handle,0,vrep.simx_opmode_oneshot_wait) \n vrep.simxSetJointTargetVelocity(clientID,R2_handle,0,vrep.simx_opmode_oneshot_wait) \n \xa0 \n def speed(handle,speed): \n \xa0\xa0\xa0\xa0 errorCode = vrep.simxSetJointTargetVelocity(clientID,handle,speed,vrep.simx_opmode_oneshot_wait) \n def start(): \n \xa0\xa0\xa0\xa0 vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait) \n \xa0\xa0\xa0\xa0 while True: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 errorCode,position_BR=vrep.simxGetObjectPosition(clientID,R1_handle,-1,vrep.simx_opmode_oneshot) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 errorCode,position_RR=vrep.simxGetObjectPosition(clientID,R2_handle,-1,vrep.simx_opmode_oneshot) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 BB =position_S[1] - position_BR[1] #左右 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 BBB =position_S[0] - position_BR[0]#前後 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 RR =position_S[1] - position_RR[1] #左右 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 RRR =position_S[0] - position_RR[0]#前後 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print(position_S) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if BBB <-0.03: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R1_handle, B_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif BBB >= -0.03: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R1_handle, R_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pass \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if RRR >0.03: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle, R_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 elif RRR <= 0.03: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 speed(R2_handle, B_KickBallVel) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pass \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Mv = BB*2 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Mvv = RR*2 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,P1_handle,Mv,vrep.simx_opmode_oneshot_wait) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,P2_handle,Mvv,vrep.simx_opmode_oneshot_wait) \n start() \n \n \n \n \n \n \n \n AG2 \n 手足球模擬系統功能展示 (模擬展示與說明影片) \n \n AG3 \n Ag3-第十二週-影像辨識尋找球和桿子位置 \n 由於程式碼長度過長，所以未嵌入網頁 \n 如果想要直接看到程式內容可至 這裡 \n 利用影像辨識系統尋找紅方、藍方和綠球的位置。 \n \n 程式利用 https://github.com/nemilya/vrep-api-python-opencv 改編而成 \n vrep設定檔: https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g3_1/blob/master/v-rep/40623128/TableFootBall/v-rep/tablefootball - 0507.ttt \n 程式檔: https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g3_1/blob/master/v-rep/40623128/TableFootBall/v-rep/Image_Detection_RGB.py \n Ag3-第十三週-影像辨識機器對打 \n 利用影像辨識抓取球與操作桿位置並使之對打， \n 由於影像需要處理時間，所以模擬速度越快抓取位置越不精確。 \n 已知錯誤: \n 如果球打到桿子後方會無法回擊。 \n \n vrep設定檔: tablefootball - 0507.ttt \n 程式檔: Image_Detection_play.py \n Ag3-第十四週-影像辨識機器對打修正十三週錯誤 \n 解決了上週若球至桿子後方將無法回擊的問題 \n 影片: \n \n vrep設定檔: tablefootball - 0507.ttt \n 程式檔: Image_Detection_play_v2.py \n Ag3-第十四週-更改影像辨識方式 \n 由辨識同顏色一個物件改成 辨識 同顏色多個物件 \n 程式檔: Image_Detection_many.py \n Ag3-第十五週-影像辨識多個球員踢球 \n 判斷第二根桿子上兩個球員誰距離球比較近，會利用較近的球員去踢球。 \n 由於影像輸出後要進行運算，要花費一段時間(可以看影片中的上下兩台攝影機的延遲看出)， \n 所以模擬速度如果調整過快會導致判斷錯誤。 \n \n \n 設定檔: tablefootball - 0601.ttt \n 程式檔: Image_Detection_blue1_red1_fin.py \n \n \n AG4 \n 手足球模擬系統功能展示 (模擬展示與說明影片) \n \n AG5 \n 手足球模擬系統功能展示 (模擬展示與說明影片) \n \n AG6 \n', 'tags': '', 'url': '系統功能展示.html'}, {'title': '結案報告', 'text': '', 'tags': '', 'url': '結案報告.html'}, {'title': 'Scrum-2 系統影片', 'text': '這是 Scrum-2 截至 W12 所完成的模擬影片: \n \n 足球員採用 Onshape 建立, 其他零組件採用 Solvespace 建立, 參考檔案位於:  https://github.com/mdecourse/cd2019/t...  V-rep 場景檔案:  https://github.com/mdecourse/cd2019/b...  以 V-rep 3.6.1 以上版本開啟檔案後執行, 鍵盤 a 與 d 鍵控制左右平移, w 與 s 鍵控制旋轉. \n', 'tags': '', 'url': 'Scrum-2 系統影片.html'}, {'title': '專案口頭簡報', 'text': 'AG1 \n 各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n \n AG2 \n 各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n \n AG3 \n 各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n \n AG4 \n 各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n \n AG5 \n 各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n \n AG6 \n 各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n', 'tags': '', 'url': '專案口頭簡報.html'}, {'title': '專案報告書', 'text': 'AG1 \n 各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書) \n \n AG2 \n 各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書) \n \n AG3 \n 各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書) \n \n AG4 \n 各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書) \n \n AG5 \n 各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書) \n \n AG6 \n 各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書)', 'tags': '', 'url': '專案報告書.html'}]};